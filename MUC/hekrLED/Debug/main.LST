C51 COMPILER V9.00   MAIN                                                                  01/03/2016 21:07:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Keil\C51\Bin\C51.exe main.c DB OE INCDIR(E:\Keil\C51\INC;E:\Keil\C51\INC)

line level    source

*** WARNING C500 IN LINE 1 OF MAIN.C: LICENSE ERROR (R208: RENEW LICENSE ID CODE (LIC))

   1          #include <reg52.h>        
   2          #include "hekr_protocol.h"
   3          
   4          #define USER_REV_BUFF_MAX_LEN           20      // ¸ù¾ÝÊµ¼ÊÇé¿öµ÷Õû½ÓÊÕbuffer´óÐ¡
   5          
   6          void InitUART(void);
   7          void SendByte(unsigned char dat);
   8          unsigned char xdata Recv_Buffer[USER_REV_BUFF_MAX_LEN];  //´æ´¢Êý¾Ý
   9          unsigned char Recv_STA = 0;
  10          /*------------------------------------------------
  11                              Ö÷º¯Êý°
  12          ------------------------------------------------*/
  13          void main (void)
  14          {
  15   1              unsigned char temp = 0,UserValidLen = 9;
  16   1              InitUART();//³õÊ¼»¯´®¿Ú
  17   1              HekrInit(SendByte);
  18   1              HekrValidDataUpload(UserValidLen);
  19   1              HekrModuleControl(HekrConfig);
  20   1              while(1)
  21   1              {
  22   2                      if(Recv_STA)
  23   2                      {
  24   3                              temp = HekrRecvDataHandle(Recv_Buffer);
  25   3                              if(ValidDataUpdate == temp)
  26   3                              {
  27   4                                      //½ÓÊÕµÄÊý¾Ý±£´æÔÚ valid_data Êý×éÀï
  28   4                                      //User Code
  29   4                                      SendByte(valid_data[0]);
  30   4                              }
  31   3                              if(HekrModuleStateUpdate == temp)
  32   3                              {
  33   4                                      //½ÓÊÕµÄÊý¾Ý±£´æÔÚ ModuleStatus Ö¸ÕëÀïŒ
  34   4                                      //User Code.
  35   4                                      SendByte(ModuleStatus->CMD);
  36   4                              }
  37   3                              Recv_STA = 0;           
  38   3                      }
  39   2              }
  40   1      }
  41          
  42          void InitUART(void)
  43          {
  44   1              SCON  = 0x50;             //²¨ÌØÂÊ9600       
  45   1        TMOD |= 0x20;              
  46   1        TH1   = 0XF3;             
  47   1              TL1   = 0XF3;
  48   1        TR1   = 1;                                       
  49   1        EA    = 1;                  
  50   1        ES    = 1;                
  51   1      }         
  52          
  53          void SendByte(unsigned char dat)//Ïò´®¿Ú·¢ËÍÊý¾Ý
  54          {
C51 COMPILER V9.00   MAIN                                                                  01/03/2016 21:07:30 PAGE 2   

  55   1              SBUF = dat;
  56   1              while(!TI);
  57   1                      TI = 0;
  58   1      }
  59          
  60          void UART_SER (void) interrupt 4 
  61          {
  62   1              unsigned char Temp;        
  63   1              static unsigned char count,flag = 0;
  64   1              
  65   1              if (RI)                      
  66   1              {
  67   2                      RI = 0;                      
  68   2                      Temp = SBUF;
  69   2      
  70   2                      if (0 == flag)
  71   2                      {
  72   3                              if (HEKR_FRAME_HEADER == Temp)//Èç¹ûÊý¾ÝÊÇ0x48 ÎÞ·ûºÅÀàÐÍ  Êý¾ÝÖ¡Í·¾Í¿ªÊ¼´æºóÃæµÄÊý¾Ý
  73   3                              {
  74   4                                      count = 0;
  75   4                                      flag = 1;  //±êÖ¾Î»ÖÃ1
  76   4                                      Recv_Buffer[count++] = Temp;
  77   4                              }
  78   3                      }
  79   2                      else//Êý¾ÝÍ·¶ÔÁËÖ®ºó¾Í¿ªÊ¼´æ´¢ºóÃæµÄÊý¾Ý¶ÔÁË
  80   2                      {
  81   3                              if (USER_REV_BUFF_MAX_LEN > count)//Êý¾Ý¸öÊýÃ»ÓÐ³¬¹ýÊý×é´óÐ¡
  82   3                              {
  83   4                                      Recv_Buffer[count++] = Temp;//´æ´¢Êý¾Ý
  84   4                                      if((count > 4) && (count >= Recv_Buffer[1]))
  85   4                                      //Èç¹ûÊý¾Ý¸öÊý´óÓÚ4 ºÍÊý¾Ý¸öÊý´óÓÚµÈÓÚÖ¡³¤0x0e¾Í¸´Î»£¬´ÓÐÂ¶ÁÈëÊý¾Ý
  86   4                                      {
  87   5                                              Recv_STA = 1;
  88   5                                              flag = 0;
  89   5                                              count = 0;
  90   5                                      }
  91   4                              }
  92   3                              else//´æ´¢µÄÊý¾Ý¸öÊý´óÓÚÊý×é¹æ¶¨¾Í´ÓÐÂ¶ÁÈëÊý¾Ý
  93   3                              {
  94   4                                      flag = 0;
  95   4                                      count = 0;
  96   4                              }
  97   3                      }
  98   2              }
  99   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    219    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     20    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
